\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Figure taken from \cite {mikolov13}. The CBOW architecture predicts the current word based on the context. The Skip-gram predicts surrounding words given the current word.\relax }}{13}% 
\contentsline {figure}{\numberline {2.2}{\ignorespaces Figure taken from \cite {mikolov13b}. A 2-dimensional PCA projection of the 1000-dimensional skip-gram vectors of countries and their capital cities. The proposed model is able to automatically organize concepts and learn implicit relationships between them. No supervised information was provided about what a capital city means.\relax }}{16}% 
\contentsline {figure}{\numberline {2.3}{\ignorespaces Figure taken from \cite {colahLSTM}. The internals of the LSTM cell, and the recurrent flow which is repeated for three consecutive timesteps $t-1, t, t+1$. The LSTM produces an hidden representation at every steep $h_{t-1}, h_{t}, h_{t+1}$ given some inputs $x_{t-1}, x_t, x_{t+1}$. \relax }}{22}% 
\contentsline {figure}{\numberline {2.4}{\ignorespaces Figure taken from \cite {vaswani17}. The transformer module architecture. The transformer encapsulates multiple attention layers.\relax }}{25}% 
\contentsline {figure}{\numberline {2.5}{\ignorespaces Figure taken from \cite {devlin18}. BERT uses a bidirectional transformer, which is not limited to reading in all the input from only left to right or right to left. OpenAI GPT (next section) uses a left-to-right Transformer, while ELMo is using a bidirectional LSTM which naturally captures a direction. \relax }}{27}% 
\contentsline {figure}{\numberline {2.6}{\ignorespaces Example from \cite {devlin18}. An input sentence which where 15\% of the tokens are replaced with the [MASK] token. During pre-training, the weights of the BERT model are optimized in such a way to predict the true underlying words. The word to be predicted is \textit {the} \relax }}{27}% 
\contentsline {figure}{\numberline {2.7}{\ignorespaces Example from \cite {devlin18}. Two input sequences which where 15\% of the tokens are replaced with the [MASK] token. During pre-training, the weights of the BERT model are optimized in such a way to predict the true underlying words. In this case, the second sentence is a continuation of the first one, and thus the label would be \textit {isNext}. \relax }}{28}% 
\contentsline {figure}{\numberline {2.8}{\ignorespaces Figure taken from \cite {devlin18}. BERT takes as input multiple tokens, including a position embedding, the token embedding and the segment embedding. This allows BERT to distinguish between the location of the word within a sentence, and which word token was provided and which sentence the word token is a part of.\relax }}{28}% 
\contentsline {figure}{\numberline {2.9}{\ignorespaces The BERT model takes as input a sentence $s$. The sentence $s$ is converted to a sequence of BERT tokens $t_1$, \ldots , $t_m$ as defined in a given vocabulary $V$. Each item in the vocabulary $V$ has a corresponding embedding vector inside the embedding layer of the transformer. This embedding vector is used by the intermediate layers of the transformer, and thus affects the downstream pipeline of the transformer for any subsequent layers of the transformer. \relax }}{30}% 
\contentsline {figure}{\numberline {2.10}{\ignorespaces From \cite {wang19}. All GLUE tasks, what linguistic phenomenon is being benchmarked, the domain that the benchmark data contains sentences in, and the sizes of the training and test sets (in number of samples)\relax }}{32}% 
\contentsline {figure}{\numberline {2.11}{\ignorespaces Figure taken from \cite {miller90}. Word-forms $F_1$, and $F_2$ are synonyms of each other, as they share one word meaning $M_1$. Word-form $F_2$, as it entails more than one meaning, namely $M_1$ and $M_2$.\relax }}{37}% 
\contentsline {figure}{\numberline {2.12}{\ignorespaces Example output for WordNet 3.1 noun propositions for the word "bank". In total, 18 different concepts are recorded.\relax }}{38}% 
\contentsline {figure}{\numberline {2.13}{\ignorespaces Example output for WordNet 3.1 noun propositions for the word "was". In total, 18 different concepts are recorded.\relax }}{39}% 
\contentsline {figure}{\numberline {2.14}{\ignorespaces Shows that the SemCor data is biased. Words with a low WordNet sense index (i.e. close to 0) occur much more often than words that have a high WordNet sense index (i.e. above 5). The x-axis shows the WordNet sense index for a chosen word, while the y-axis shows the log-frequency within SemCor. This is a cumulative plot over all words with WordNet senses within SemCor 3.0. The skew could be a natural effect of how word lower WordNet indecies are assigned to more commonly used words. \relax }}{40}% 
\contentsline {figure}{\numberline {2.15}{\ignorespaces Taken from \cite {suarez19}. The individual tiles show the kNN prediction regions by color for every point in the image. Using the unmodified euclidean distancee, this would result in classification regions on the left. The reader can see, learning an appropriate distance, the classification is much more effective (middle). Finally, the dimensionality is also reducable with this dimension while still matching the classification accuracy (right).\relax }}{43}% 
\contentsline {figure}{\numberline {2.16}{\ignorespaces Taken from \cite {kaya19}. An illustration of deep metric learning. The space is transformed in such a way, that similar object are closer to each other, and dissimilar objects are moved away from each other.\relax }}{45}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces From \cite {kudugunta18}, visualizing clustering of the encoder representations of all languages, based on ther SVCCA similarity.\relax }}{57}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Partition 1 for the word \texttt {arms}. This cluster contains \texttt {arms} in the context of hancuffed arms. Notice that the sentiment is usually one of surprise, and rather negative.\relax }}{72}% 
\contentsline {figure}{\numberline {4.2}{\ignorespaces Partition 2 for the word \texttt {arms}. This cluster contains \texttt {arms} in the context of arms where one person hugs or loves another. Notice that this usually includes a positive sentiment.\relax }}{72}% 
\contentsline {figure}{\numberline {4.3}{\ignorespaces Partition 3 for the word \texttt {arms}. This cluster contains \texttt {arms} in the context of strong arms, usually in a competitive context.\relax }}{73}% 
\contentsline {figure}{\numberline {4.4}{\ignorespaces Partition 4 for the word \texttt {arms}. This cluster contains \texttt {arms} in the context of individuals and countries. This uses the semantic definition of arms which is analogous to \texttt {weaponry}.\relax }}{73}% 
\contentsline {figure}{\numberline {4.5}{\ignorespaces Partition 5 for the word \texttt {arms}. This cluster contains \texttt {arms} in the context of countries (no individuals). This uses the semantic definition of arms which is analogous to \texttt {weaponry}. One can notice that these sentences usually refer to nuclear arms.\relax }}{73}% 
\contentsline {figure}{\numberline {4.6}{\ignorespaces Partition 6 for the word \texttt {arms}. This cluster again refers to the arms of a person, however usually with a positive / optimistic sentiment.\relax }}{74}% 
\contentsline {figure}{\numberline {4.7}{\ignorespaces Cumulative dominance of the most occurring cluster. Dominance of a part of speech tag is measured by the percentage cover that the majority class intakes.\relax }}{77}% 
\contentsline {figure}{\numberline {4.8}{\ignorespaces PCA and UMAP visualizations for context embeddings $X$ sampled for the word $w=$\texttt {run}. \relax }}{78}% 
\contentsline {figure}{\numberline {4.9}{\ignorespaces PCA and UMAP visualizations for context embeddings $X$ sampled for the word $w=$\texttt {block}. \relax }}{78}% 
\contentsline {figure}{\numberline {4.10}{\ignorespaces PCA and UMAP visualizations for context embeddings $X$ sampled for the word $w=$\texttt {cold}. \relax }}{79}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces For each word $w$, we sample both the number of WordNet semantic classes that are recorded in the WordNet dataset. We also calculate the dimension-wise mean variance between $n=500$ sampled vectors for the word $w$. This constitutes a point on this plot. We repeat this procedure for the most 20'000 most frequent words which consist of a single token (i.e. are not split up into further subtokens when the tokenizer is applied). We show that although the variance is relatively high, especially if only few WordNet classes are present, there is a correlation between the number of WordNet classes and the variance of sampled BERT context embeddings. The right and top distributions show histograms of how occurrent the variance and WordNet classes are respectively. Our assumption is that if we introduce additional embedding-vectors inside BERT for certain words, that more complex distributions can be captures for words that have a higher number of WordNet classes. \relax }}{82}% 
\contentsline {figure}{\numberline {5.2}{\ignorespaces The PoS modified pipeline. The BERnie PoS model takes as input a sentence $s$. The sentence $s$ is converted to a sequence of BERT tokens $[t_1$, \ldots , $t_m]$ as defined in a given vocabulary $V$. This vocabulary $V$ is extended with the additionally introduced tokens for each of the split-words. For each target token $t_{\text {target}}$, we make the token more specific by converting the token to a more specialized token-representation, which specifies the part-of-speech information as part of the token. In this case, $run$ becomes the more specialized $run\_ VERB$. Again, each item in the vocabulary $V$ has a corresponding embedding vector inside the embedding layer of the transformer. This embedding vector is used by the intermediate layers of the transformer, and thus affects the downstream pipeline of the language model for any subsequent layers of the transformer. \relax }}{84}% 
\contentsline {figure}{\numberline {5.3}{\ignorespaces Inside the embedding layer of the transformer which occurs at each layer of BERT, we introduce more specific embeddings \texttt {run\_VERB} and \texttt {run\_NOUN}. The BERT model should now capture more expressiveness, as more weight got introduced for a part of the model which results in a probability distribution with high variance. The original \texttt {run} embedding is removed.\relax }}{85}% 
\contentsline {figure}{\numberline {5.4}{\ignorespaces The resulting, fully modified BERnie PoS pipeline.\relax }}{85}% 
\contentsline {figure}{\numberline {5.5}{\ignorespaces The semantic modified pipeline. The BERnie Cluster model takes as input a sentence $s$. The sentence $s$ is converted to a sequence of BERT tokens $[t_1$, \ldots , $t_m]$ as defined in a given vocabulary $V$. This vocabulary $V$ is extended with the additionally introduced tokens for each of the split-words. For each target token $t_{\text {target}}$, we make the token more specific by converting the token to a more specialized token-representation, which specifies the clustereing information as part of the token. In this case, $bank$ becomes the more specialized $bank\_FINANCE$. Again, each item in the vocabulary $V$ has a corresponding embedding vector inside the embedding layer of the transformer. This embedding vector is used by the intermediate layers of the transformer, and thus affects the downstream pipeline of the language model for any subsequent layers of the transformer. \relax }}{87}% 
\contentsline {figure}{\numberline {5.6}{\ignorespaces plots of....\relax }}{88}% 
\contentsline {figure}{\numberline {5.7}{\ignorespaces The BERT model takes as input a sentence $s$. The The resulting, fully modifid BERnie Cluster pipeline.\relax }}{88}% 
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {A.1}{\ignorespaces Some figure\relax }}{104}% 
\contentsline {figure}{\numberline {A.2}{\ignorespaces Some figure\relax }}{104}% 
\contentsline {figure}{\numberline {A.3}{\ignorespaces Some figure\relax }}{105}% 
\contentsline {figure}{\numberline {A.4}{\ignorespaces Some figure\relax }}{105}% 
\contentsline {figure}{\numberline {A.5}{\ignorespaces Some figure\relax }}{105}% 
\contentsline {figure}{\numberline {A.6}{\ignorespaces Some figure\relax }}{105}% 
\contentsline {figure}{\numberline {A.7}{\ignorespaces Some figure\relax }}{106}% 
\contentsline {figure}{\numberline {A.8}{\ignorespaces Some figure\relax }}{106}% 
\contentsline {figure}{\numberline {A.9}{\ignorespaces Some figure\relax }}{106}% 
\contentsline {figure}{\numberline {A.10}{\ignorespaces Some figure\relax }}{106}% 
\contentsline {figure}{\numberline {A.11}{\ignorespaces Some figure\relax }}{107}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {B.1}{\ignorespaces Taken from \cite {conneau17}. Each \relax }}{109}% 
